swagger: '2.0'
info:
  description: 'IdentityChain Agent REST API'
  title: IdentityChain API
  version: '0.0.1'
host: localhost:8000
schemes:
- http
consumes:
  - application/json
parameters:
  userParam:
    name: user
    in: path
    description: A unique id (or 'me') value identifying this user.
    type: string
    required: true
  walletParam:
    name: wallet
    in: path
    description: A unique id value identifying this wallet.
    type: string
    required: true
securityDefinitions:
  basic:
    type: basic
paths:
  /api/claim/:
    get:
      operationId: claim_list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - claim
    post:
      consumes:
      - application/json
      operationId: claim_create
      parameters:
      - in: body
        name: data
        schema:
          properties:
            claim_object:
              description: ''
              type: string
          required:
          - claim_object
          type: object
      responses:
        '201':
          description: ''
      tags:
      - claim
  /api/claim/{id}/:
    delete:
      operationId: claim_delete
      parameters:
      - description: A unique integer value identifying this claim.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: ''
      tags:
      - claim
    get:
      operationId: claim_read
      parameters:
      - description: A unique integer value identifying this claim.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - claim
    patch:
      consumes:
      - application/json
      operationId: claim_partial_update
      parameters:
      - description: A unique integer value identifying this claim.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            claim_object:
              description: ''
              type: string
          type: object
      responses:
        '200':
          description: ''
      tags:
      - claim
    put:
      consumes:
      - application/json
      operationId: claim_update
      parameters:
      - description: A unique integer value identifying this claim.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            claim_object:
              description: ''
              type: string
          required:
          - claim_object
          type: object
      responses:
        '200':
          description: ''
      tags:
      - claim
  /api/claimdef/:
    get:
      operationId: claimdef_list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - claimdef
    post:
      consumes:
      - application/json
      operationId: claimdef_create
      parameters:
      - in: body
        name: data
        schema:
          properties:
            schema_req_id:
              description: ''
              type: string
          required:
          - schema_req_id
          type: object
      responses:
        '201':
          description: ''
      tags:
      - claimdef
  /api/claimdef/{id}/:
    delete:
      operationId: claimdef_delete
      parameters:
      - description: A unique integer value identifying this claim def.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: ''
      tags:
      - claimdef
    get:
      operationId: claimdef_read
      parameters:
      - description: A unique integer value identifying this claim def.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - claimdef
    patch:
      consumes:
      - application/json
      operationId: claimdef_partial_update
      parameters:
      - description: A unique integer value identifying this claim def.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            schema_req_id:
              description: ''
              type: string
          type: object
      responses:
        '200':
          description: ''
      tags:
      - claimdef
    put:
      consumes:
      - application/json
      operationId: claimdef_update
      parameters:
      - description: A unique integer value identifying this claim def.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            schema_req_id:
              description: ''
              type: string
          required:
          - schema_req_id
          type: object
      responses:
        '200':
          description: ''
      tags:
      - claimdef
  /api/claimoffer/:
    get:
      operationId: claimoffer_list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - claimoffer
    post:
      consumes:
      - application/json
      operationId: claimoffer_create
      parameters:
      - in: body
        name: data
        schema:
          properties:
            n_id:
              description: ''
              type: integer
            schema:
              description: ''
              type: integer
            seq_no:
              description: ''
              type: integer
          required:
          - n_id
          - schema
          - seq_no
          type: object
      responses:
        '201':
          description: ''
      tags:
      - claimoffer
  /api/claimoffer/{id}/:
    delete:
      operationId: claimoffer_delete
      parameters:
      - description: A unique integer value identifying this claim offer.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: ''
      tags:
      - claimoffer
    get:
      operationId: claimoffer_read
      parameters:
      - description: A unique integer value identifying this claim offer.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - claimoffer
    patch:
      consumes:
      - application/json
      operationId: claimoffer_partial_update
      parameters:
      - description: A unique integer value identifying this claim offer.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            n_id:
              description: ''
              type: integer
            schema:
              description: ''
              type: integer
            seq_no:
              description: ''
              type: integer
          type: object
      responses:
        '200':
          description: ''
      tags:
      - claimoffer
    put:
      consumes:
      - application/json
      operationId: claimoffer_update
      parameters:
      - description: A unique integer value identifying this claim offer.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            n_id:
              description: ''
              type: integer
            schema:
              description: ''
              type: integer
            seq_no:
              description: ''
              type: integer
          required:
          - n_id
          - schema
          - seq_no
          type: object
      responses:
        '200':
          description: ''
      tags:
      - claimoffer
  /api/connections/:
    post:
      summary: Accept a connection offer
      description: Accept a connection offer
      parameters:
      - in: body
        name: data
        schema:
          properties:
            wallet:
              description: 'Wallet to use for accepting the connection offer'
              type: string
            connectionOffer:
              description: 'The connection offer object'
              type: object
          required:
          - wallet
          - connection_offer
          type: object
      responses:
        '200':
          description: 'Success'
      tags:
      - connection
  /api/connectionoffers/:
    post:
      summary: Create a new connection offer
      description: Create a new connection offer
      parameters:
      - in: body
        name: data
        schema:
          properties:
            wallet:
              description: 'Wallet to use for creating the connection offer'
              type: string
          required:
          - wallet
          type: object
      responses:
        '201':
          description: ''
      tags:
      - connectionoffer
  /api/endpoint/:
    post:
      description: Agent endpoint
      summary: Agent endpoint
      parameters:
      - in: body
        name: data
        schema:
          properties:
            type:
              description: 'Message encryption type'
              type: string
              default: anon
              enum:
              - anon
              - auth
            target:
              description: 'Reason for the message'
              type: string
              enum:
              - accept_connection
            ref:
              description: 'A reference value, e.g. nonce'
              type: string
            message:
              description: 'Encrypted message string'
              type: string
            signature:
              description: 'Message Signature'
              type: string
          required:
          - target
          - ref
          - message
          - signature
          type: object
      responses:
        '200':
          description: ''
      tags:
      - endpoint
  /api/proof/:
    get:
      operationId: proof_list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - proof
    post:
      consumes:
      - application/json
      operationId: proof_create
      parameters:
      - in: body
        name: data
        schema:
          properties:
            proof_obj:
              description: ''
              type: string
          required:
          - proof_obj
          type: object
      responses:
        '201':
          description: ''
      tags:
      - proof
  /api/proof/{id}/:
    delete:
      operationId: proof_delete
      parameters:
      - description: A unique integer value identifying this proof.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '204':
          description: ''
      tags:
      - proof
    get:
      operationId: proof_read
      parameters:
      - description: A unique integer value identifying this proof.
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: ''
      tags:
      - proof
    patch:
      consumes:
      - application/json
      operationId: proof_partial_update
      parameters:
      - description: A unique integer value identifying this proof.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            proof_obj:
              description: ''
              type: string
          type: object
      responses:
        '200':
          description: ''
      tags:
      - proof
    put:
      consumes:
      - application/json
      operationId: proof_update
      parameters:
      - description: A unique integer value identifying this proof.
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: data
        schema:
          properties:
            proof_obj:
              description: ''
              type: string
          required:
          - proof_obj
          type: object
      responses:
        '200':
          description: ''
      tags:
      - proof
  /api/schemas/:
    get:
      operationId: schema_list
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - schemas
    post:
      consumes:
      - application/json
      operationId: schema_create
      parameters:
      - in: body
        name: data
        schema:
          properties:
            name:
              description: A unique name of the schema
              type: string
            version:
              description: version for schema
              type: string
            attrNames:
              description: list of attribute names put into the schema
              type: array
              items:
               type: string
            wallet:
              description: A unique value identifying this wallet
              type: string
          required:
          - name, version, attrNames, wallet
          type: object
      responses:
        '201':
          description: ''
      tags:
      - schemas
  /api/schemas/{id}/{wallet}:
    delete:
      operationId: schema_delete
      parameters:
      - description: A unique string value identifying this schema.
        in: path
        name: id
        required: true
        type: string
      - description: A unique value identifying this wallet.
        in: path
        name: wallet
        required: true
        type: string
      responses:
        '204':
          description: ''
      tags:
        - schemas
    get:
      operationId: schema_read
      parameters:
      - description: A unique string value identifying this schema.
        in: path
        name: id
        required: true
        type: string
      - description: A unique value identifying this wallet.
        in: path
        name: wallet
        required: true
        type: string
      responses:
        '200':
          description: ''
      tags:
        - schemas
  /api/users/:
    post:
      summary: Register a new user
      description: Register a new user
      parameters:
      - in: body
        name: data
        schema:
          properties:
            username:
              description: 'Required.'
              type: string
            password:
              description: 'Required.'
              type: string
          required:
          - username
          - password
          type: object
      responses:
        '201':
          description: User successfully created
          headers:
            Location:
              description: Path to created user, e.g. /users/userId
              type: string
      tags:
      - users
  /api/users/{user}/:
    get:
      summary: Retrieve a user
      description: Retrieve a user
      parameters:
        - $ref: '#/parameters/userParam'
      responses:
        '200':
          description: 'Success'
      tags:
      - users
    post:
      summary: Update a User
      description: Update a User (at least one of the properties must be provided)
      parameters:
      - $ref: '#/parameters/userParam'
      - in: body
        name: data
        schema:
          properties:
            username:
              description: ''
              type: string
            password:
              description: ''
              type: string
          type: object
      responses:
        '501':
          description: 'Not yet implemented'
      tags:
      - users
    delete:
      summary: Delete a User
      description: Delete a User
      parameters:
      - $ref: '#/parameters/userParam'
      responses:
        '204':
          description: ''
      tags:
      - users
  /api/wallets/:
    get:
      summary: List all wallets of user
      description: List all wallets of user
      parameters: []
      responses:
        '200':
          description: ''
      tags:
      - wallet
    post:
      summary: Create a new Wallet (optionally with given name and settings)
      description: Create a new Wallet (optionally with given name and settings)
      parameters:
      - in: body
        name: data
        schema:
          properties:
            name:
              description: 'Wallet name, must be globally unique. Automatically generated if none is provided.'
              type: string
            config:
              description: 'Wallet Config JSON. Supported keys vary by wallet type. A default config will be used if none is provided.'
              type: string
            credentials:
              description: 'Wallet Credentials JSON. Supported keys vary by wallet type. A default config will be used if none is provided.'
              type: string
            poolName:
              description: 'Name of the Pool to associate with this wallet. A default config will be used if none is provided.'
              type: string
            seed:
              description: 'Seed to use for initial issuerDid creation.'
              type: string
            xtype:
              description: 'Type of the wallet. A default config will be used if none is provided.'
              type: string
          type: object
      responses:
        '201':
          description: ''
      tags:
      - wallet
  /api/wallets/{wallet}/:
    get:
      summary: Retrieve a Wallet.
      description: Retrieve a Wallet.
      parameters:
      - $ref: '#/parameters/walletParam'
      responses:
        '200':
          description: ''
      tags:
      - wallet
    delete:
      summary: Delete a Wallet
      description: Delete a Wallet
      parameters:
      - $ref: '#parameters/walletParam'
      responses:
        '204':
          description: ''
      tags:
      - wallet
